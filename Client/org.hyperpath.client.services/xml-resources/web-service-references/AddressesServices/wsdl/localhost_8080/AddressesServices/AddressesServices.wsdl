<?xml version='1.0' encoding='UTF-8'?><!-- Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Metro/2.1 (branches/2.1-6728; 2011-02-03T14:14:58+0000) JAXWS-RI/2.2.3 JAXWS/2.2. --><!-- Generated by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Metro/2.1 (branches/2.1-6728; 2011-02-03T14:14:58+0000) JAXWS-RI/2.2.3 JAXWS/2.2. --><definitions xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsp1_2="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://services.hyperpath.org/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/wsdl/" targetNamespace="http://services.hyperpath.org/" name="AddressesServices">
<types>
<xsd:schema>
<xsd:import namespace="http://services.hyperpath.org/" schemaLocation="http://localhost:8080/AddressesServices/AddressesServices?xsd=1" />
</xsd:schema>
</types>
<message name="findClientsByAddress">
<part name="parameters" element="tns:findClientsByAddress" />
</message>
<message name="findClientsByAddressResponse">
<part name="parameters" element="tns:findClientsByAddressResponse" />
</message>
<message name="Exception">
<part name="fault" element="tns:Exception" />
</message>
<message name="NonexistentEntityException">
<part name="fault" element="tns:NonexistentEntityException" />
</message>
<message name="listAllAddress">
<part name="parameters" element="tns:listAllAddress" />
</message>
<message name="listAllAddressResponse">
<part name="parameters" element="tns:listAllAddressResponse" />
</message>
<message name="RollbackFailureException">
<part name="fault" element="tns:RollbackFailureException" />
</message>
<message name="addAddress">
<part name="parameters" element="tns:addAddress" />
</message>
<message name="addAddressResponse">
<part name="parameters" element="tns:addAddressResponse" />
</message>
<message name="PreexistingEntityException">
<part name="fault" element="tns:PreexistingEntityException" />
</message>
<message name="updateAddress">
<part name="parameters" element="tns:updateAddress" />
</message>
<message name="updateAddressResponse">
<part name="parameters" element="tns:updateAddressResponse" />
</message>
<message name="deleteAddress">
<part name="parameters" element="tns:deleteAddress" />
</message>
<message name="deleteAddressResponse">
<part name="parameters" element="tns:deleteAddressResponse" />
</message>
<message name="findApproximateAddressesByCategory">
<part name="parameters" element="tns:findApproximateAddressesByCategory" />
</message>
<message name="findApproximateAddressesByCategoryResponse">
<part name="parameters" element="tns:findApproximateAddressesByCategoryResponse" />
</message>
<message name="findAddressByLocation">
<part name="parameters" element="tns:findAddressByLocation" />
</message>
<message name="findAddressByLocationResponse">
<part name="parameters" element="tns:findAddressByLocationResponse" />
</message>
<message name="findServicesByAddress">
<part name="parameters" element="tns:findServicesByAddress" />
</message>
<message name="findServicesByAddressResponse">
<part name="parameters" element="tns:findServicesByAddressResponse" />
</message>
<message name="findAdvertizersByAddress">
<part name="parameters" element="tns:findAdvertizersByAddress" />
</message>
<message name="findAdvertizersByAddressResponse">
<part name="parameters" element="tns:findAdvertizersByAddressResponse" />
</message>
<portType name="AddressesServices">
<operation name="findClientsByAddress">
<input wsam:Action="http://services.hyperpath.org/AddressesServices/findClientsByAddressRequest" message="tns:findClientsByAddress" />
<output wsam:Action="http://services.hyperpath.org/AddressesServices/findClientsByAddressResponse" message="tns:findClientsByAddressResponse" />
<fault message="tns:Exception" name="Exception" wsam:Action="http://services.hyperpath.org/AddressesServices/findClientsByAddress/Fault/Exception" />
<fault message="tns:NonexistentEntityException" name="NonexistentEntityException" wsam:Action="http://services.hyperpath.org/AddressesServices/findClientsByAddress/Fault/NonexistentEntityException" />
</operation>
<operation name="listAllAddress">
<input wsam:Action="http://services.hyperpath.org/AddressesServices/listAllAddressRequest" message="tns:listAllAddress" />
<output wsam:Action="http://services.hyperpath.org/AddressesServices/listAllAddressResponse" message="tns:listAllAddressResponse" />
<fault message="tns:Exception" name="Exception" wsam:Action="http://services.hyperpath.org/AddressesServices/listAllAddress/Fault/Exception" />
<fault message="tns:RollbackFailureException" name="RollbackFailureException" wsam:Action="http://services.hyperpath.org/AddressesServices/listAllAddress/Fault/RollbackFailureException" />
<fault message="tns:NonexistentEntityException" name="NonexistentEntityException" wsam:Action="http://services.hyperpath.org/AddressesServices/listAllAddress/Fault/NonexistentEntityException" />
</operation>
<operation name="addAddress">
<input wsam:Action="http://services.hyperpath.org/AddressesServices/addAddressRequest" message="tns:addAddress" />
<output wsam:Action="http://services.hyperpath.org/AddressesServices/addAddressResponse" message="tns:addAddressResponse" />
<fault message="tns:Exception" name="Exception" wsam:Action="http://services.hyperpath.org/AddressesServices/addAddress/Fault/Exception" />
<fault message="tns:RollbackFailureException" name="RollbackFailureException" wsam:Action="http://services.hyperpath.org/AddressesServices/addAddress/Fault/RollbackFailureException" />
<fault message="tns:PreexistingEntityException" name="PreexistingEntityException" wsam:Action="http://services.hyperpath.org/AddressesServices/addAddress/Fault/PreexistingEntityException" />
</operation>
<operation name="updateAddress">
<input wsam:Action="http://services.hyperpath.org/AddressesServices/updateAddressRequest" message="tns:updateAddress" />
<output wsam:Action="http://services.hyperpath.org/AddressesServices/updateAddressResponse" message="tns:updateAddressResponse" />
<fault message="tns:Exception" name="Exception" wsam:Action="http://services.hyperpath.org/AddressesServices/updateAddress/Fault/Exception" />
<fault message="tns:RollbackFailureException" name="RollbackFailureException" wsam:Action="http://services.hyperpath.org/AddressesServices/updateAddress/Fault/RollbackFailureException" />
<fault message="tns:PreexistingEntityException" name="PreexistingEntityException" wsam:Action="http://services.hyperpath.org/AddressesServices/updateAddress/Fault/PreexistingEntityException" />
</operation>
<operation name="deleteAddress">
<input wsam:Action="http://services.hyperpath.org/AddressesServices/deleteAddressRequest" message="tns:deleteAddress" />
<output wsam:Action="http://services.hyperpath.org/AddressesServices/deleteAddressResponse" message="tns:deleteAddressResponse" />
<fault message="tns:Exception" name="Exception" wsam:Action="http://services.hyperpath.org/AddressesServices/deleteAddress/Fault/Exception" />
<fault message="tns:RollbackFailureException" name="RollbackFailureException" wsam:Action="http://services.hyperpath.org/AddressesServices/deleteAddress/Fault/RollbackFailureException" />
<fault message="tns:NonexistentEntityException" name="NonexistentEntityException" wsam:Action="http://services.hyperpath.org/AddressesServices/deleteAddress/Fault/NonexistentEntityException" />
</operation>
<operation name="findApproximateAddressesByCategory">
<input wsam:Action="http://services.hyperpath.org/AddressesServices/findApproximateAddressesByCategoryRequest" message="tns:findApproximateAddressesByCategory" />
<output wsam:Action="http://services.hyperpath.org/AddressesServices/findApproximateAddressesByCategoryResponse" message="tns:findApproximateAddressesByCategoryResponse" />
<fault message="tns:Exception" name="Exception" wsam:Action="http://services.hyperpath.org/AddressesServices/findApproximateAddressesByCategory/Fault/Exception" />
<fault message="tns:NonexistentEntityException" name="NonexistentEntityException" wsam:Action="http://services.hyperpath.org/AddressesServices/findApproximateAddressesByCategory/Fault/NonexistentEntityException" />
</operation>
<operation name="findAddressByLocation">
<input wsam:Action="http://services.hyperpath.org/AddressesServices/findAddressByLocationRequest" message="tns:findAddressByLocation" />
<output wsam:Action="http://services.hyperpath.org/AddressesServices/findAddressByLocationResponse" message="tns:findAddressByLocationResponse" />
<fault message="tns:NonexistentEntityException" name="NonexistentEntityException" wsam:Action="http://services.hyperpath.org/AddressesServices/findAddressByLocation/Fault/NonexistentEntityException" />
</operation>
<operation name="findServicesByAddress">
<input wsam:Action="http://services.hyperpath.org/AddressesServices/findServicesByAddressRequest" message="tns:findServicesByAddress" />
<output wsam:Action="http://services.hyperpath.org/AddressesServices/findServicesByAddressResponse" message="tns:findServicesByAddressResponse" />
<fault message="tns:Exception" name="Exception" wsam:Action="http://services.hyperpath.org/AddressesServices/findServicesByAddress/Fault/Exception" />
<fault message="tns:NonexistentEntityException" name="NonexistentEntityException" wsam:Action="http://services.hyperpath.org/AddressesServices/findServicesByAddress/Fault/NonexistentEntityException" />
</operation>
<operation name="findAdvertizersByAddress">
<input wsam:Action="http://services.hyperpath.org/AddressesServices/findAdvertizersByAddressRequest" message="tns:findAdvertizersByAddress" />
<output wsam:Action="http://services.hyperpath.org/AddressesServices/findAdvertizersByAddressResponse" message="tns:findAdvertizersByAddressResponse" />
<fault message="tns:Exception" name="Exception" wsam:Action="http://services.hyperpath.org/AddressesServices/findAdvertizersByAddress/Fault/Exception" />
<fault message="tns:NonexistentEntityException" name="NonexistentEntityException" wsam:Action="http://services.hyperpath.org/AddressesServices/findAdvertizersByAddress/Fault/NonexistentEntityException" />
</operation>
</portType>
<binding name="AddressesServicesPortBinding" type="tns:AddressesServices">
<soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document" />
<operation name="findClientsByAddress">
<soap:operation soapAction="" />
<input>
<soap:body use="literal" />
</input>
<output>
<soap:body use="literal" />
</output>
<fault name="Exception">
<soap:fault name="Exception" use="literal" />
</fault>
<fault name="NonexistentEntityException">
<soap:fault name="NonexistentEntityException" use="literal" />
</fault>
</operation>
<operation name="listAllAddress">
<soap:operation soapAction="" />
<input>
<soap:body use="literal" />
</input>
<output>
<soap:body use="literal" />
</output>
<fault name="Exception">
<soap:fault name="Exception" use="literal" />
</fault>
<fault name="RollbackFailureException">
<soap:fault name="RollbackFailureException" use="literal" />
</fault>
<fault name="NonexistentEntityException">
<soap:fault name="NonexistentEntityException" use="literal" />
</fault>
</operation>
<operation name="addAddress">
<soap:operation soapAction="" />
<input>
<soap:body use="literal" />
</input>
<output>
<soap:body use="literal" />
</output>
<fault name="Exception">
<soap:fault name="Exception" use="literal" />
</fault>
<fault name="RollbackFailureException">
<soap:fault name="RollbackFailureException" use="literal" />
</fault>
<fault name="PreexistingEntityException">
<soap:fault name="PreexistingEntityException" use="literal" />
</fault>
</operation>
<operation name="updateAddress">
<soap:operation soapAction="" />
<input>
<soap:body use="literal" />
</input>
<output>
<soap:body use="literal" />
</output>
<fault name="Exception">
<soap:fault name="Exception" use="literal" />
</fault>
<fault name="RollbackFailureException">
<soap:fault name="RollbackFailureException" use="literal" />
</fault>
<fault name="PreexistingEntityException">
<soap:fault name="PreexistingEntityException" use="literal" />
</fault>
</operation>
<operation name="deleteAddress">
<soap:operation soapAction="" />
<input>
<soap:body use="literal" />
</input>
<output>
<soap:body use="literal" />
</output>
<fault name="Exception">
<soap:fault name="Exception" use="literal" />
</fault>
<fault name="RollbackFailureException">
<soap:fault name="RollbackFailureException" use="literal" />
</fault>
<fault name="NonexistentEntityException">
<soap:fault name="NonexistentEntityException" use="literal" />
</fault>
</operation>
<operation name="findApproximateAddressesByCategory">
<soap:operation soapAction="" />
<input>
<soap:body use="literal" />
</input>
<output>
<soap:body use="literal" />
</output>
<fault name="Exception">
<soap:fault name="Exception" use="literal" />
</fault>
<fault name="NonexistentEntityException">
<soap:fault name="NonexistentEntityException" use="literal" />
</fault>
</operation>
<operation name="findAddressByLocation">
<soap:operation soapAction="" />
<input>
<soap:body use="literal" />
</input>
<output>
<soap:body use="literal" />
</output>
<fault name="NonexistentEntityException">
<soap:fault name="NonexistentEntityException" use="literal" />
</fault>
</operation>
<operation name="findServicesByAddress">
<soap:operation soapAction="" />
<input>
<soap:body use="literal" />
</input>
<output>
<soap:body use="literal" />
</output>
<fault name="Exception">
<soap:fault name="Exception" use="literal" />
</fault>
<fault name="NonexistentEntityException">
<soap:fault name="NonexistentEntityException" use="literal" />
</fault>
</operation>
<operation name="findAdvertizersByAddress">
<soap:operation soapAction="" />
<input>
<soap:body use="literal" />
</input>
<output>
<soap:body use="literal" />
</output>
<fault name="Exception">
<soap:fault name="Exception" use="literal" />
</fault>
<fault name="NonexistentEntityException">
<soap:fault name="NonexistentEntityException" use="literal" />
</fault>
</operation>
</binding>
<service name="AddressesServices">
<port name="AddressesServicesPort" binding="tns:AddressesServicesPortBinding">
<soap:address location="http://localhost:8080/AddressesServices/AddressesServices" />
</port>
</service>
</definitions>